buildscript {
    ext.kotlin_version = '1.0.5'
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

configure(allprojects) {
    configure(subprojects) {
        apply plugin: 'java'
        apply plugin: 'idea'
        apply plugin: 'kotlin'

        sourceCompatibility = 1.8
        targetCompatibility = 1.8

        switch ( org.gradle.internal.os.OperatingSystem.current() ) {
            case org.gradle.internal.os.OperatingSystem.WINDOWS:
                project.ext.lwjglNatives = "natives-windows"
                break
            case org.gradle.internal.os.OperatingSystem.LINUX:
                project.ext.lwjglNatives = "natives-linux"
                break
            case org.gradle.internal.os.OperatingSystem.MAC_OS:
                project.ext.lwjglNatives = "natives-macos"
                break
        }

        project.ext.lwjglVersion = "3.1.0"

        repositories {
            mavenCentral()
            jcenter()
        }

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }

        dependencies {
            testCompile 'junit:junit:+'
            testCompile 'org.mockito:mockito-all:+'
            testCompile 'org.hamcrest:hamcrest-all:+'
            testCompile 'org.springframework:spring-test:+'

            compile 'org.slf4j:jcl-over-slf4j:+'
            compile 'ch.qos.logback:logback-classic:+'
            compile 'io.reactivex:rxjava:+'

            compile 'org.springframework:spring-beans:+'
            compile 'org.springframework:spring-context:+'

            // LWJGL dependencies START
            compile "org.lwjgl:lwjgl:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-glfw:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-nfd:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-openal:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-opengl:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-par:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-stb:${lwjglVersion}"
            compile "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}"
            // LWJGL natives
            runtime "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
            runtime "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${lwjglNatives}"
            runtime "org.lwjgl:lwjgl-jemalloc:${lwjglVersion}:${lwjglNatives}"
            runtime "org.lwjgl:lwjgl-nfd:${lwjglVersion}:${lwjglNatives}"
            runtime "org.lwjgl:lwjgl-openal:${lwjglVersion}:${lwjglNatives}"
            runtime "org.lwjgl:lwjgl-par:${lwjglVersion}:${lwjglNatives}"
            runtime "org.lwjgl:lwjgl-stb:${lwjglVersion}:${lwjglNatives}"
            runtime "org.lwjgl:lwjgl-tinyfd:${lwjglVersion}:${lwjglNatives}"
            // LWJGL dependencies END

            compile 'org.joml:joml:+'

            compile 'net.sf.sociaal:jbullet:+'

            compile group: 'org.python', name: 'jython-standalone', version: '2.7.0'

            compile 'com.github.nifty-gui:nifty:1.4.2'
        }

        configurations.all {
            exclude group: 'commons-logging', module: 'commons-logging'
        }

        idea {
            module {
                downloadJavadoc true
                downloadSources true
            }
        }
    }
    group 'org.homonoia'
    version '0.1-SNAPSHOT'
}


task wrapper(type: Wrapper) {
    gradleVersion '3.1'
}